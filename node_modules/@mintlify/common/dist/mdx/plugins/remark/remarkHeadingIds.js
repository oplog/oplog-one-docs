import { slugifyWithCounter } from '@sindresorhus/slugify';
import { visit } from 'unist-util-visit';
import { createMdxJsxAttribute, getUnicodeId } from '../../lib/remark-utils.js';
import { getTableOfContentsTitle } from '../../lib/remark-utils.js';
export const HEADING_LEVELS = [1, 2, 3, 4];
export const remarkHeadingIds = () => (tree) => {
    const slugify = slugifyWithCounter();
    visit(tree, 'heading', (node, _, parent) => {
        if (HEADING_LEVELS.includes(node.depth)) {
            const title = getTableOfContentsTitle(node);
            const encodedTitle = getUnicodeId(title);
            let slug;
            // if encoded title is already percent-encoded, return it as is
            // slugify doesn't support percent-encoded characters, like Chinese, Korean, etc.
            if (/%[0-9A-F]{2}/.test(encodedTitle)) {
                slug = slugify(encodedTitle, {
                    decamelize: false,
                    preserveCharacters: ['%'],
                    lowercase: false,
                });
            }
            else {
                slug = slugify(encodedTitle, { decamelize: false });
            }
            const mdxJsxAttributes = [
                createMdxJsxAttribute('level', node.depth),
                createMdxJsxAttribute('id', slug),
                createMdxJsxAttribute('isAtRootLevel', (parent === null || parent === void 0 ? void 0 : parent.type) === 'root'),
            ];
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            node.attributes = mdxJsxAttributes;
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            node.type = 'mdxJsxFlowElement';
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            node.name = 'Heading';
        }
    });
};
